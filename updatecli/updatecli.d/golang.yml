---
name: "Bump golang version"

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  getGolangVersion:
    kind: githubrelease
    spec:
      owner: golang
      repository: go
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionfilter:
        kind: regex
        ## Latest stable 1.x.y version
        pattern: 'go1\.(\d*)\.(\d*)$'
    transformers:
      - trimprefix: go

conditions:
  testDockerfileArgGoVersion:
    name: "Does the Dockerfile have an ARG instruction which key is GO_VERSION?"
    kind: dockerfile
    disablesourceinput: true
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "GO_VERSION"
  testCstGolangVersion:
    name: "Does the test harness checks for a label label io.jenkins-infra.tools.golang.version?"
    kind: yaml
    disablesourceinput: true
    spec:
      file: "cst.yml"
      key: "metadataTest.labels[2].key"
      value: io.jenkins-infra.tools.golang.version

targets:
  updateCstVersion:
    name: "Update the label io.jenkins-infra.tools.golang.version in the test harness"
    sourceid: getGolangVersion
    kind: yaml
    spec:
      file: "cst.yml"
      key: "metadataTest.labels[2].value"
    scmid: default
  updateDockerfileArgVersion:
    name: "Update the value of ARG GO_VERSION in the Dockerfile"
    sourceid: getGolangVersion
    kind: dockerfile
    spec:
      file: Dockerfile
      instruction:
        keyword: "ARG"
        matcher: "GO_VERSION"
    scmid: default

pullrequests:
  default:
    kind: github
    scmid: default
    spec:
      labels:
        - dependencies
        - golang
